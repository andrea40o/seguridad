name: PHP CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v6

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1.2'

    - name: Install dependencies
      run: |
        if [ -f composer.json ]; then
          composer install --no-progress --no-suggest --prefer-dist
        else
          echo "composer.json not found, skipping dependency installation."
        fi

    - name: Run tests
      if: success()
      run: |
        if [ -f vendor/bin/phpunit ]; then
          vendor/bin/phpunit
        else
          echo "PHPUnit not installed, skipping tests."
        fi

  #security_scan:
    #runs-on: ubuntu-latest
    #steps:
    #- name: Checkout code
      #uses: actions/checkout@v2

    #- name: Run OWASP Dependency-Check
      #uses: owasp/dependency-check-action@v3
      #with:
        #project: seguridad
        #format: ALL
        #scan: .
        
    - name: Upload Dependency-Check Report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: ./dependency-check-report.html

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build application
      run: |
        # Aquí puedes agregar los comandos necesarios para construir tu aplicación
        echo "Construcción de la aplicación completada"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to test environment
      run: |
        # Aquí puedes agregar los comandos necesarios para desplegar tu aplicación en el entorno de pruebas
        echo "Despliegue en el entorno de pruebas completado"
